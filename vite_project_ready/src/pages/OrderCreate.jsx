import React, { useEffect, useState } from "react";
import { useNavigate, useSearchParams } from "react-router-dom";
import { saveOrder } from "../services/orderService";
import { getSuppliers } from "../services/supplierService";
import { getOrders } from "../services/orderService";
import { addToStock } from "../services/inventoryService";
import dayjs from "dayjs";

export default function OrderCreate() {
  const [searchParams] = useSearchParams();
  const [suppliers, setSuppliers] = useState([]);
  const [supplier, setSupplier] = useState("");
  const defaultItem = searchParams.get("item") || "";
  const defaultQty = searchParams.get("qty") || "";
  const [item, setItem] = useState(defaultItem);
  const [quantity, setQuantity] = useState(defaultQty);
  const [status, setStatus] = useState("–û–∂–∏–¥–∞–µ—Ç");
  const [date, setDate] = useState("");
  const navigate = useNavigate();
  const [supplierInfo, setSupplierInfo] = useState(null);



  useEffect(() => {
    const allSuppliers = getSuppliers();
    setSuppliers(allSuppliers);
    if (allSuppliers.length > 0) {
      const defaultName = allSuppliers[0].name;
      setSupplier(defaultName);
      analyzeSupplier(defaultName);
    }
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("–°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑:", item, quantity, status)
    if (status === "–û—Ç–≥—Ä—É–∂–µ–Ω") {
      addToStock(item, quantity);
    }
    saveOrder({ supplier, item, quantity, status, date });
    navigate("/orders");
  };

  const analyzeSupplier = (name) => {
    const orders = getOrders();
    const relevant = orders.filter((o) => o.supplier === name);
    const total = relevant.length;

    const active = relevant.filter(
      (o) => o.status === "–û–∂–∏–¥–∞–µ—Ç" || o.status === "–í –ø—É—Ç–∏"
    ).length;

    const today = dayjs();

    const overdue = relevant.filter((o) => {
      if (!o.date) return false;
      const daysPassed = today.diff(dayjs(o.date), "day");

      return (
        (o.status === "–û–∂–∏–¥–∞–µ—Ç" && daysPassed > 5) ||
        (o.status === "–í –ø—É—Ç–∏" && daysPassed > 10) ||
        o.overdueBeforeShipped === true
      );
    }).length;

    const reliability = total > 0 ? Math.round(100 - (overdue / total) * 100) : 100;

    setSupplierInfo({ total, active, reliability });
  };

  return (
    <div className="max-w-2xl mx-auto p-6">
      <h2 className="text-2xl font-bold mb-4">–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞</h2>
      <form onSubmit={handleSubmit} className="space-y-4 bg-white p-6 rounded-lg shadow">
        <div>
          <label className="block text-sm font-medium mb-1">–ü–æ—Å—Ç–∞–≤—â–∏–∫</label>
          <select
            className="w-full border px-3 py-2 rounded"
            value={supplier}
            onChange={(e) => {
              setSupplier(e.target.value);
              analyzeSupplier(e.target.value);
            }}
            required
          >
            {suppliers.length === 0 ? (
              <option disabled>–ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤</option>
            ) : (
              suppliers.map((s, i) => (
                <option key={i} value={s.name}>
                  {s.name}
                </option>
              ))
            )}
          </select>
          {supplierInfo && (
            <div className="mt-2 text-sm text-gray-700 bg-gray-100 p-3 rounded">
              <strong>üü¢ –ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å:</strong> {supplierInfo.reliability}%{" "}
              <span className="ml-2 italic text-sm text-gray-600">
                ({supplierInfo.reliability >= 90
                  ? "–≤—ã—Å–æ–∫–∞—è"
                  : supplierInfo.reliability >= 70
                  ? "—Å—Ä–µ–¥–Ω—è—è"
                  : "–Ω–∏–∑–∫–∞—è"})
              </span>
              <br />
              üì¶ <strong>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤:</strong> {supplierInfo.total}, –∏–∑ –Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö: {supplierInfo.active}
            </div>
          )}
          {supplierInfo?.reliability < 70 && (
            <div className="mt-3 text-sm bg-red-100 text-red-800 border border-red-300 p-3 rounded">
              ‚ö† <strong>–í–Ω–∏–º–∞–Ω–∏–µ:</strong> –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–∏–∂–µ 70%.
              <br />
              –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.
            </div>
          )}
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–ú–∞—Ç–µ—Ä–∏–∞–ª</label>
          <input
            type="text"
            className="w-full border px-3 py-2 rounded"
            value={item}
            onChange={(e) => setItem(e.target.value)}
            required
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</label>
          <input
            type="number"
            className="w-full border px-3 py-2 rounded"
            value={quantity}
            onChange={(e) => setQuantity(e.target.value)}
            required
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–°—Ç–∞—Ç—É—Å</label>
          <select
            className="w-full border px-3 py-2 rounded"
            value={status}
            onChange={(e) => setStatus(e.target.value)}
          >
            <option>–û–∂–∏–¥–∞–µ—Ç</option>
            <option>–û—Ç–≥—Ä—É–∂–µ–Ω</option>
            <option>–í –ø—É—Ç–∏</option>
          </select>
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–î–∞—Ç–∞</label>
          <input
            type="date"
            className="w-full border px-3 py-2 rounded"
            value={date}
            onChange={(e) => setDate(e.target.value)}
            required
          />
        </div>
        <button type="submit" className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
      </form>
    </div>
  );
}

/*üìç <strong>–ü–æ—Å—Ç–∞–≤—â–∏–∫:</strong> {supplier}
              <br />*/